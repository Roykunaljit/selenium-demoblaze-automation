name: Selenium Test Suite

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Chrome and Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | grep -o '[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*' | head -n1)
          DRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_$(echo $CHROME_VERSION | cut -d. -f1)")
          echo "Chrome: $CHROME_VERSION | Driver: $DRIVER_VERSION"
          wget -O chromedriver.zip "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${DRIVER_VERSION}/linux64/chromedriver-linux64.zip"
          unzip chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          chmod +x /usr/local/bin/chromedriver

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Keyword-Driven Test Data
        run: python create_fresh_test_data.py

      - name: Enforce Headless Mode
        run: |
          sed -i 's/^headless_mode = False/headless_mode = True/' selenium_demoblaze_framework/config/config.ini

      - name: Run Tests and Generate Reports
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest selenium_demoblaze_framework/tests/ \
            --html=reports/test-report.html \
            --self-contained-html \
            --alluredir=reports/allure-results

      - name: Upload HTML Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-test-report
          path: reports/test-report.html

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: reports/allure-results

      - name: Generate Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: reports/allure-results
          allure_report: allure-report

      - name: Prepare GitHub Pages Deployment
        run: |
          mkdir -p pages-deploy

          # Copy Allure report (as a subfolder named by run number)
          cp -r allure-report "pages-deploy/${{ github.run_number }}"

          # Create symlink for "latest" (optional)
          ln -sf "${{ github.run_number }}" pages-deploy/latest

          # Copy HTML report
          mkdir -p pages-deploy/html-reports
          cp reports/test-report.html "pages-deploy/html-reports/report-${{ github.run_number }}.html"

          # Generate index.html
          cat > pages-deploy/index.html <<EOF
          <!DOCTYPE html>
          <html>
          <head>
            <title>Selenium Test Reports</title>
            <meta charset="utf-8">
            <style>
              body { font-family: sans-serif; max-width: 900px; margin: 40px auto; line-height: 1.6; }
              h1 { color: #2c3e50; }
              .card { background: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px; }
              a.btn { display: inline-block; padding: 10px 20px; background: #3498db; color: white; text-decoration: none; border-radius: 5px; margin: 5px; }
              a.btn:hover { background: #2980b9; }
            </style>
          </head>
          <body>
            <h1>ðŸ§ª Selenium DemoBlaze Test Reports</h1>

            <div class="card">
              <h2>ðŸ“Š Allure Report (Run #${{ github.run_number }})</h2>
              ${{ github.run_number }}/Open Allure Report</a>
            </div>

            <div class="card">
              <h2>ðŸ“„ HTML Report</h2>
              html-reports/report-${{ github.run_number }}.htmlOpen HTML Report</a>
            </div>

            <p><em>Reports auto-deployed via GitHub Actions.</em></p>
          </body>
          </html>
          EOF

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: pages-deploy
          keep_files: true
