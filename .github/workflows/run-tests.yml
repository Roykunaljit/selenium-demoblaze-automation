name: Selenium Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Chrome and Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d '.' -f1)
          DRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_${CHROME_VERSION}")
          echo "Chrome version: $(google-chrome --version)"
          echo "Chromedriver version: $DRIVER_VERSION"
          wget -O chromedriver.zip "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${DRIVER_VERSION}/linux64/chromedriver-linux64.zip"
          unzip chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          chmod +x /usr/local/bin/chromedriver

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Keyword-Driven Test Data
        run: python create_fresh_test_data.py

      - name: Enforce Headless Mode for Tests
        run: |
          sed -i 's/^headless_mode = False/headless_mode = True/' selenium_demoblaze_framework/config/config.ini

      - name: Run Pytest and Generate Reports
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest selenium_demoblaze_framework/tests/ \
            --html=reports/test-report.html \
            --self-contained-html \
            --alluredir=reports/allure-results

      - name: Upload HTML Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-test-report
          path: reports/test-report.html

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: reports/allure-results
          allure_history: allure-history
          keep_reports: 20
          gh_pages: gh-pages

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Prepare Reports for GitHub Pages
        if: always()
        run: |
          mkdir -p deploy
          
          # Copy allure history
          if [ -d "allure-history" ]; then
            cp -r allure-history/* deploy/ 2>/dev/null || true
          fi
          
          # Create HTML reports directory
          mkdir -p deploy/html-reports
          cp reports/test-report.html deploy/html-reports/report-${{ github.run_number }}.html
          
          # Create an index page
          cat > deploy/index.html <<EOF
          <!DOCTYPE html>
          <html>
          <head>
              <title>Test Reports - Selenium DemoBlaze</title>
              <meta charset="utf-8">
              <meta http-equiv="refresh" content="0; url=${{ github.run_number }}/">
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
                      line-height: 1.6;
                      color: #333;
                      max-width: 1200px;
                      margin: 0 auto;
                      padding: 20px;
                      background: #f5f5f5;
                  }
                  .container {
                      background: white;
                      border-radius: 8px;
                      padding: 30px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                      text-align: center;
                  }
                  h1 { color: #2c3e50; }
                  .links { margin: 30px 0; }
                  .btn {
                      display: inline-block;
                      padding: 12px 24px;
                      background: #3498db;
                      color: white;
                      text-decoration: none;
                      border-radius: 5px;
                      margin: 10px;
                      transition: background 0.3s;
                  }
                  .btn:hover { background: #2980b9; }
                  .btn-html { background: #27ae60; }
                  .btn-html:hover { background: #229954; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>🧪 Test Reports</h1>
                  <p>Redirecting to latest Allure Report...</p>
                  <div class="links">
                      <a href="${{ github.run_number }}/" class="btn">Allure Report #${{ github.run_number }}</a>
                      <a href="html-reports/report-${{ github.run_number }}.html" class="btn btn-html">HTML Report #${{ github.run_number }}</a>
                  </div>
                  <p>Repository: ${{ github.repository }}</p>
              </div>
          </body>
          </html>
          EOF

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: deploy
          force_orphan: ${{ github.run_number == '1' }}

      - name: Post Report URLs
        if: always()
        run: |
          echo "### 📊 Test Reports Published! 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**🌐 Main Dashboard:** https://roykunaljit.github.io/selenium-demoblaze-automation/" >> $GITHUB_STEP_SUMMARY
          echo "**📈 Allure Report:** https://roykunaljit.github.io/selenium-demoblaze-automation/${{ github.run_number }}/" >> $GITHUB_STEP_SUMMARY
          echo "**📄 HTML Report:** https://roykunaljit.github.io/selenium-demoblaze-automation/html-reports/report-${{ github.run_number }}.html" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "Run Number: #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY